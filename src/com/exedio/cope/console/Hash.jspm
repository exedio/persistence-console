<%
/*
 * Copyright (C) 2004-2009  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.cope.console;

import static com.exedio.cope.console.Format.format;
import static com.exedio.cope.console.HashCop.CHECKED;
import static com.exedio.cope.console.HashCop.COMPUTE;
import static com.exedio.cope.console.HashCop.COMPUTE_PLAINTEXT;
import static com.exedio.cope.console.HashCop.MEASURE;

import java.util.List;

import com.exedio.cope.pattern.Hash;
import com.exedio.cope.pattern.HashAlgorithm;

final class Hash_Jspm
{
	@SuppressWarnings("StaticMethodOnlyUsedInOneClass") // ok for jspm
	static void writeBody(
			final Out out,
			final HashCop cop,
			final List<Hash> hashes,
			final List<Hash> checkedHashes,
			final boolean compute,
			final String computePlaintext,
			final boolean measure)
	{
		%>
		<form action="<%=cop%>" method="POST">
			<input type="submit" name="<%=MEASURE%>" value="measure" />
			<input type="text"   name="<%=COMPUTE_PLAINTEXT%>" />
			<input type="submit" name="<%=COMPUTE%>" value="hash" />
		<table>
			<tr>
				<th rowspan="2"></th>
				<th rowspan="2">Type</th>
				<th rowspan="2">Name</th>
				<th colspan="2">Plain Text</th>
				<th colspan="2">Algorithm</th><%

			if(compute)
			{
			%>
				<th rowspan="2">Hash</th><%
			}
			if(measure)
			{
			%>
				<th rowspan="2">Time<small>/ns</small></th><%
			}
			%>
			</tr>
			<tr>
				<th>Limit</th>
				<th>Validator</th>
				<th>ID</th>
				<th>Description</th>
			</tr><%
			for(final Hash hash : hashes)
			{
				final boolean checked = checkedHashes.contains(hash);
				final HashAlgorithm algorithm = hash.getAlgorithm2();
			%>
			<tr>
				<td class="sql"><input type="checkbox" name="<%=CHECKED%>" value="<%=hash.getID()%>"<% if(checked){%> checked="true"<%} %>></td>
				<td class="text"><%=hash.getType().getID()%></td>
				<td class="text"><%=hash.getName()%></td>
				<td><%=hash.getPlainTextLimit()%></td>
				<td><%=hash.getPlainTextValidator()%></td>
				<td class="text"><%=algorithm.getID()%></td>
				<td class="text"><%=algorithm.getDescription()%></td><%

			if(compute)
			{
				if(checked)
				{
					out.flush();
				%>
				<td class="text"><%=algorithm.hash(computePlaintext)%></td><%
				}
				else
				{
				%>
				<td class="notavailable">skipped</td><%
				}
			}
			if(measure)
			{
				if(checked)
				{
					out.flush();
					final long start = System.nanoTime();
					hash.blind("example password");
					final long end = System.nanoTime();
				%>
				<td><%=format(end-start)%></td><%
				}
				else
				{
				%>
				<td class="notavailable">skipped</td><%
				}
			}
			%>
			</tr><%
			}
			%>
		</table>
		</form><%
	}

	private Hash_Jspm()
	{
		// prevent instantiation
	}
}%>

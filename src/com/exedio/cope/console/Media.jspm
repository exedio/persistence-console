<%
/*
 * Copyright (C) 2004-2009  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.cope.console;

import static com.exedio.cope.console.Console_Jspm.writeError;
import static com.exedio.cope.console.Console_Jspm.writeToggle;
import static com.exedio.cope.console.ConsoleCop.writePager;
import static com.exedio.cope.console.Format.format;
import static com.exedio.cope.console.MediaStatsCop.format;

import java.util.Set;
import java.util.List;

import com.exedio.cope.Item;
import com.exedio.cope.Query;
import com.exedio.cope.misc.MediaSummary;
import com.exedio.cope.pattern.Media;
import com.exedio.cope.pattern.MediaFilter;
import com.exedio.cope.pattern.MediaInfo;
import com.exedio.cope.pattern.MediaPath;
import com.exedio.cope.pattern.MediaRedirect;
import com.exedio.cope.pattern.MediaRequestLog;
import com.exedio.cope.pattern.MediaThumbnail;
import com.exedio.cope.pattern.PreventUrlGuessing;
import com.exedio.cope.pattern.UrlFingerPrinting;

final class Media_Jspm
{
	@SuppressWarnings("StaticMethodOnlyUsedInOneClass") // ok for jspm
	static void writeBody(
			final MediaStatsCop cop,
			final Out out,
			final int tableColumns,
			final boolean isUrlGuessingNotSecure,
			final MediaInfo[] infos,
			final MediaSummary summary)
	{
		%>
		<table id="coloredTable">
			<caption>Statistics</caption>
			<tr>
				<th colspan="<%=tableColumns%>">No Such Path (404)</th>
				<td><a href="<%=cop.toNoSuchPath()%>"><%=format(MediaPath.getNoSuchPath())%></a></td>
			</tr><%
			MediaStatsCop.writeTableHeader(out);

			if(isUrlGuessingNotSecure)
			{
			%>
			<div>
				Beware:
				@<%=PreventUrlGuessing.class.getSimpleName()%> enabled for at least one media,
				but not securely.
				This should not happen on production systems.
				To fix this, set cope property <tt>media.url.secret</tt> to an arbitrary unguessable value.
				<% writeError(out, true); %>
			</div><%
			}

			%>
			<tr><%
				ColoredTable_Jspm.writeData(out, format(summary));
				%>
				<th colspan="3">Summary</th>
			</tr><%

			for(final MediaInfo info : infos)
				write(out, cop, cop.variant.writeUrlGuessingPrevented(), cop.variant.writeUrlFingerPrinted(), info);
		%>
		</table><%
	}

	static void write(
				final Out out,
				final ConsoleCop<?> cop,
				final boolean writeUrlGuessingPrevented,
				final boolean writeUrlFingerPrinted,
				final MediaInfo info)
	{
				final MediaPath path = info.getPath();
				final String type = path.getType().getID();
				final String name = path.getName();
				%>
			<tr><%
				ColoredTable_Jspm.writeData(out, format(info, cop));
				%>
				<td class="text"><%=type%></td>
				<td class="text"><a href="<%=cop.toMedia(path)%>"><%=name%></a></td>
				<td class="text"><%

					if(writeUrlGuessingPrevented && path.isUrlGuessingPrevented())
					{
						%><small>@<%=PreventUrlGuessing.class.getSimpleName()%></small><br><%
					}
					if(writeUrlFingerPrinted && path.isUrlFingerPrinted())
					{
						%><small>@<%=UrlFingerPrinting.class.getSimpleName()%></small><br><%
					}
					if(path.isFinal())
					{
						%><small>final </small><%
					}

					final String className = path.getClass().getName();
					if(className.startsWith("com.exedio.cope.pattern."))
					{
						%><a href="https://exedio.github.io/api/<%=
							className.replace('.', '/')%>.html" target="_blank"><%=
							path.getClass().getSimpleName()%></a><%
					}
					else
					{
						%><%=path.getClass()%><%
					}
					if(path instanceof Media)
					{
						final Media m = (Media)path;
						%>(<%=m.getContentTypeDescription()%>)<%
					}
					else if(path instanceof MediaRedirect)
					{
						final MediaRedirect redirect = (MediaRedirect)path;
						%>(<%=redirect.getTarget().getName()%>)<%
					}
					else if(path instanceof MediaThumbnail)
					{
						final MediaThumbnail thumbnail = (MediaThumbnail)path;
						%>(<%=thumbnail.getSource().getName()%>,<%=thumbnail.getBoundX()%>,<%=thumbnail.getBoundY()%>)<%
					}
					if(path instanceof MediaFilter)
					{
						final MediaFilter filter = (MediaFilter)path;
						final Set<String> contentTypes = filter.getSupportedSourceContentTypes();
						%><small><br>supports <% MediaStatsCop.printContentTypes(out, contentTypes); %></small><%
					}
				%></td>
			</tr><%
	}

	static void writeHead(
				final Out out)
	{
		%>
		<style>
			img.media
			{
				border:dotted 4px black;
				background:url('<%=ConsoleServlet.imagebackground%>');
			}
		</style><%
	}

	@SuppressWarnings("StaticMethodOnlyUsedInOneClass")
	static void writeStats(
				final Out out,
				final MediaCop cop,
				final MediaInfo info)
	{
		%>
		<table id="coloredTable">
			<caption>Statistics</caption><%
			MediaStatsCop.writeTableHeader(out);
			write(out, cop, true, true, info);
		%>
		</table>
		<hr><%
	}

	static void writeBody(
				final MediaCop cop,
				final Out out,
				final Query.Result<? extends Item> items)
	{
		final MediaPath media = cop.media;
		final MediaPath other = cop.other;
		final Media mediaLength = media instanceof Media ? (Media)media : null;
		final boolean mediaInline = cop.mediaInline;
		final boolean otherInline = cop.otherInline;
		final boolean mediaTouch = cop.canTouch();
		final boolean otherTouch = cop.canTouchOther();
		final boolean form = mediaTouch||otherTouch;

	if(cop.canContentTypeMismatch())
	{
		%>
		<% writeToggle(out, cop.toggleContentTypeMismatch(), cop.contentTypeMismatch); %> Show Mismatching Content-Type only<%
	}

	if(form)
	{
		%>
		<form action="<%=cop%>" method="post"><%
		writeButton(out);
	}

		%>
		<table><%
				writePager(out, cop);
			%>
			<tr>
				<th>Item</th>
				<th>URL <a href="<%=cop.toggleInlineMedia()%>">IN</a></th>
				<th>Content Type</th>
				<th>Last Modified</th><%

				if(mediaLength!=null)
				{
				%>
				<th>Length</th><%
				}
				if(other!=null)
				{
				%>
				<th><a href="<%=
					cop.toOther()%>"><%=other.getName()%></a> <a href="<%=
					cop.toggleInlineOther()%>">IN</a></th><%
				}
			%>
			</tr><%

			for(final Item item : items.getData())
			{
				final String contentType = media.getContentType(item);
				%>
			<tr>
				<td class="text"><%=item.getCopeID()%></td>
				<td class="text"><% writeLocator(out, media.getLocator(item), mediaInline); %></td>
				<td class="text"><%if(contentType!=null){%><%=contentType%><%}%></td>
				<td><%=media.getLastModified(item)%><%

				if(mediaTouch)
					writeCheckbox(out, MediaCop.TOUCH,       item);
				if(otherTouch)
					writeCheckbox(out, MediaCop.TOUCH_OTHER, item);

				%></td><%

				if(mediaLength!=null)
				{
				%>
				<td><%=format(mediaLength.getLength(item))%></td><%
				}
				if(other!=null)
				{
				%>
				<td class="text"><% writeLocator(out, other.getLocator(item), otherInline); %></td><%
				}
				%>
			</tr><%
			}
		%>
		</table><%

	if(form)
	{
		writeButton(out);
		%>
		</form><%
	}
	}

	private static void writeCheckbox(final Out out, final String name, final Item item)
	{
		%><input type="checkbox" name="<%=name%>" value="<%=item.getCopeID()%>"></input><%
	}

	private static void writeButton(final Out out)
	{
		%>
		<input type="submit" value="touch"></input><%
	}

	private static void writeLocator(final Out out, final MediaPath.Locator locator, final boolean inline)
	{
		if(locator!=null)
		{
			final String contentType = locator.getContentType();

			%><a href="<%=locator%>"><%
			if(inline && contentType!=null && contentType.startsWith("image/"))
			{
				%><img src="<%=locator%>" class="media"><%
			}
			else
			{
				%><%=locator.getPath()%><%
			}
			%></a><%
		}
	}

	static void writeErrorLogs(
				final Out out,
				final List<MediaRequestLog> logs)
	{
		%>
		<table>
			<tr>
				<th>#</th>
				<th>Date</th>
				<th>Remote Address</th>
				<th>Path Info</th>
				<th>Query String</th>
				<th>Host</th>
				<th>Referer</th>
				<th>User Agent</th>
				<th>Exception</th>
			</tr><%

		int n = 0;
		for(final MediaRequestLog log : logs)
		{
			%>
			<tr>
				<td><%=n++%></td>
				<td class="text"<% if(log.isSecure()){%> style="background-color:#ddf"<%} %>><%=log.getDate()%></td><%
				writeLine(out, log.getRemoteAddr());
				writeLine(out, log.getPathInfo());
				writeLine(out, log.getQueryString());
				writeLine(out, log.getHost());
				writeLine(out, log.getReferer());
				writeLine(out, log.getUserAgent());

				final Exception exception = log.getException();
				if(exception!=null)
				{
				%>
				<td class="text"><% StackTrace_Jspm.write(out, exception.getStackTrace()); %></td><%
				}
				else
				{
				%>
				<td class="notavailable">null</td><%
				}
			%>
			</tr><%
		}
		%>
		</table><%
	}

	private static void writeLine(
				final Out out,
				final String line)
	{
			if(line!=null)
			{
				%>
				<td class="text"><%=line%></td><%
			}
			else
			{
				%>
				<td class="notavailable">null</td><%
			}
	}

	static void writeMediaURLPrefixes(
				final Out out,
				final ConsoleCop<?> cop,
				final String activePrefix,
				final List<String> prefixes)
	{
		%>
		<h3>Media URL Prefix</h3>
		<ul><%

			writeMediaURLPrefix(out, cop, activePrefix, null);

			for(final String prefix : prefixes)
				writeMediaURLPrefix(out, cop, activePrefix, prefix);

		%>
		</ul>
		<hr><%
	}

	private static void writeMediaURLPrefix(
				final Out out,
				final ConsoleCop<?> cop,
				final String activePrefix,
				final String prefix)
	{
			final boolean inActive = (activePrefix==null) ? (prefix!=null) : !activePrefix.equals(prefix);
			final String prefixName = prefix!=null ? prefix : "getURLByConnect";
			%>
			<li><%
				if(inActive)
				{
					%><a href="<%=cop.toMediaURLPrefix(prefix)%>"><%
				}
				%><%= prefixName %><%

				if(inActive)
				{
					%></a><%
				}
				%></li><%
	}

	private Media_Jspm()
	{
		// prevent instantiation
	}
}%>

<?xml version="1.0"?>

<project name="cope" default="build" basedir=".">

	<echo taskname="which ant" message="${ant.version}" />
	<echo taskname="which java" message="${java.vm.name} ${java.version}" />
	<!--suppress AntMissingPropertiesFileInspection -->
	<property file="local.properties" />
	<property file="project.properties" />

	<import>
		<fileset dir="macros">
			<include name="*.xml" />
		</fileset>
	</import>

	<taskdef name="LoadFile" classname="org.apache.tools.ant.taskdefs.LoadFile" />

	<taskdef
			name="for"
			classname="net.sf.antcontrib.logic.ForTask"
			classpath="lib/ant-contrib.jar" />

	<taskdef
			resource="com/exedio/jspm/ant.properties"
			classpath="lib/exedio-jspm.jar" />

	<macrodef name="ljunit">
		<attribute name="test" />
		<attribute name="env" default="N" />
		<element name="implicit-element" optional="true" implicit="true" />
		<sequential>
			<mkdir dir="build/testresults" />
			<junit fork="yes"
					haltonerror="true" haltonfailure="true"
					showoutput="true" printsummary="true">
				<formatter type="brief" usefile="false" />
				<formatter type="xml" />
				<implicit-element />
				<test name="@{test}" todir="build/testresults" outfile="@{test}-@{env}" />
				<sysproperty key="tomcat.port.http" value="${tomcat.port.http}" />
				<assertions><enable/></assertions>
			</junit>
		</sequential>
	</macrodef>

	<target name="catalina">
		<property name="catalina.root" value="apache-tomcat-8.5.14" />
		<untar src="lib/tomcat.tar.gz"
				 compression="gzip"
				 dest="${basedir}">
			<patternset>
				<exclude name="${catalina.root}/conf/server.xml" />
				<exclude name="${catalina.root}/conf/tomcat-users.xml" />
				<exclude name="${catalina.root}/webapps/ROOT/**" />
				<exclude name="${catalina.root}/webapps/docs/**" />
				<exclude name="${catalina.root}/webapps/examples/**" />
			</patternset>
			<mapper type="glob" from="${catalina.root}/*" to="tomcat/*" />
		</untar>
		<chmod dir="tomcat/bin" perm="ugo+x" includes="*.sh" />
		<copy todir="tomcat/conf">
			<fileset dir="${basedir}">
				<include name="tomcat-users.xml" />
			</fileset>
		</copy>
		<echo message="tomcat ports: shutdown=${tomcat.port.shutdown} http=${tomcat.port.http}" />
		<copy file="server.xml" todir="tomcat/conf" overwrite="true">
			<filterset>
				<filter token="PORT_SHUTDOWN" value="${tomcat.port.shutdown}" />
				<filter token="PORT_HTTP"     value="${tomcat.port.http}"     />
			</filterset>
		</copy>
	</target>

	<target name="src.jspm">
		<jspm>
			<fileset dir="src" includes="**/*.jspm" />
		</jspm>
	</target>

	<target name="src.compile" depends="src.jspm">
		<compile srcdir="src">
			<classpath>
				<pathelement location="lib/exedio-cope-util.jar" />
				<pathelement location="lib/exedio-cops.jar" />
				<pathelement location="lib/exedio-cope.jar" />
				<pathelement location="lib/javax.servlet-api.jar" />
				<pathelement location="lib/exedio-cope-instrument-annotations.jar" />
				<pathelement location="lib/slf4j-api.jar" />
			</classpath>
		</compile>
	</target>

	<target name="jar" depends="src.compile">
		<jar-exedio
				name="cope console"
				jarfile="build/exedio-cope-console.jar"
				classpath="exedio-cope.jar exedio-cops.jar">
			<fileset dir="build/classes/src" />
		</jar-exedio>
	</target>

	<target name="testsrc.compile" depends="src.compile">
		<compile srcdir="testsrc">
			<classpath>
				<pathelement location="build/classes/src" />
				<pathelement location="lib/exedio-cope-util.jar" />
				<pathelement location="lib/exedio-cops.jar" />
				<pathelement location="lib/exedio-cope.jar" />
				<pathelement location="lib/javax.servlet-api.jar" />
				<pathelement location="lib/junit.jar" />
				<pathelement location="lib/exedio-cope-instrument-annotations.jar" />
				<pathelement location="lib/sl4j-api.jar" />
			</classpath>
		</compile>
	</target>

	<target name="test" depends="src.compile, testsrc.compile">
		<ljunit test="com.exedio.cope.console.PackageTest">
			<classpath>
				<pathelement location="build/classes/src" />
				<pathelement location="build/classes/testsrc" />
				<pathelement location="lib/exedio-cope-util.jar" />
				<pathelement location="lib/exedio-cops.jar" />
				<pathelement location="lib/exedio-cope.jar" />
				<pathelement location="lib/trove4j.jar" />
				<pathelement location="lib/slf4j-api.jar" />
				<pathelement location="lib/hsqldb.jar" />
				<pathelement location="lib/junit.jar" />
			</classpath>
		</ljunit>
	</target>

	<target name="web.jspm">
		<jspm>
			<fileset dir="websrc" includes="**/*.jspm" />
		</jspm>
	</target>

	<target name="instrument.taskdef" depends="web.jspm, src.compile">
		<taskdef resource="com/exedio/cope/instrument/ant.properties">
			<classpath>
				<pathelement location="build/classes/src" />
				<pathelement location="lib/exedio-cope-instrument.jar" />
				<pathelement location="lib/exedio-cope-servletutil.jar" />
				<pathelement location="lib/exedio-cops.jar" />
				<pathelement location="lib/slf4j-api.jar" />
				<pathelement location="lib/micrometer-core.jar" />
				<pathelement location="lib/LatencyUtils.jar" />
				<pathelement location="lib/javax.servlet-api.jar" />
			</classpath>
		</taskdef>
	</target>

	<target name="web.instrument" unless="skip.instrument" depends="instrument.taskdef">
		<instrument dir="websrc" verify="${instrument.verify}">
			<disableWrap>com.exedio.cope.DataField#set(com.exedio.cope.Item,java.io.File)</disableWrap>
			<disableWrap>com.exedio.cope.pattern.Media#set(com.exedio.cope.Item,java.io.File,java.lang.String)</disableWrap>
			<disableWrap>com.exedio.cope.DataField#get(com.exedio.cope.Item,java.io.File)</disableWrap>
			<disableWrap>com.exedio.cope.pattern.Media#getBody(com.exedio.cope.Item,java.io.File)</disableWrap>
			<suppressWarnings>
				<constructor>RedundantArrayCreation</constructor>
				<constructor>RedundantSuppression</constructor>
				<constructor>ZeroLengthArrayAllocation</constructor>
				<wrapper>FinalMethodInFinalClass</wrapper>
				<wrapper>RedundantSuppression</wrapper>
				<wrapper>UnnecessarilyQualifiedStaticUsage</wrapper>
			</suppressWarnings>
		</instrument>
	</target>

	<target name="web.compile" depends="src.compile, web.jspm, web.instrument">
		<compile srcdir="websrc">
			<classpath>
				<pathelement location="build/classes/src" />
				<pathelement location="lib/exedio-cope-util.jar" />
				<pathelement location="lib/exedio-cope-servletutil.jar" />
				<pathelement location="lib/exedio-cope.jar" />
				<pathelement location="lib/exedio-cops.jar" />
				<pathelement location="lib/javax.servlet-api.jar" />
				<pathelement location="lib/exedio-cope-instrument-annotations.jar" />
			</classpath>
		</compile>
	</target>

	<target name="web" depends="web.compile, src.compile">
		<copy todir="web/WEB-INF/classes">
			<fileset dir="build/classes/src" />
			<fileset dir="build/classes/websrc" />
		</copy>
		<copy todir="web/WEB-INF/lib">
			<fileset file="lib/trove4j.jar" />
			<fileset file="lib/slf4j-api.jar" />
			<fileset file="lib/exedio-cops.jar" />
			<fileset file="lib/exedio-cope-servletutil.jar" />
			<fileset file="lib/exedio-cope-util.jar" />
			<fileset file="lib/exedio-cope.jar" />
			<fileset file="lib/exedio-cope-hsqldb.jar" />
			<fileset file="lib/exedio-cope-mysql.jar" />
			<fileset file="lib/hsqldb.jar" />
			<fileset file="lib/mysql-connector-java.jar" />
			<fileset file="lib/micrometer-core.jar" />
			<fileset file="lib/LatencyUtils.jar" />
		</copy>
		<foreachClusterNode>
			<copy todir="build/clusterweb@{node}">
				<fileset dir="web" />
			</copy>
		</foreachClusterNode>
		<mkdir dir="vaultFileServiceRoot" />
		<mkdir dir="vaultFileServiceRoot/.tempVaultFileService" />
		<mkdir dir="vaultFileServiceRootOther" />
		<mkdir dir="vaultFileServiceRootOther/.tempVaultFileService" />
	</target>

	<target name="tomcat" depends="web, catalina">
		<copy tofile="tomcat/conf/Catalina/localhost/cope-console.xml" file="context.xml"/>
		<foreachClusterNode>
			<copy
					tofile="tomcat/conf/Catalina/localhost/cope-console-cluster@{node}.xml"
					file="context-cluster.xml"
					overwrite="true">
				<filterset>
					<filter token="NODE" value="@{node}" />
				</filterset>
			</copy>
			<copy
					tofile="build/clusterweb@{node}/WEB-INF/cope.properties"
					file="cluster.cope.properties"
					overwrite="true" />
		</foreachClusterNode>
	</target>

	<macrodef name="foreachClusterNode">
		<element name="implicit-element" optional="false" implicit="true" />
		<sequential>
			<for param="node" list="${clusterNodes}">
				<sequential>
					<implicit-element />
				</sequential>
			</for>
		</sequential>
	</macrodef>

	<target name="clean">
		<delete dir="build" />
		<delete dir="web/WEB-INF/classes" />
		<delete dir="web/WEB-INF/lib" />
		<delete dir="tomcat" />
		<delete>
			<fileset dir="src">
				<include name="**/*_Jspm.java" />
			</fileset>
			<fileset dir="websrc">
				<include name="**/*_Jspm.java" />
			</fileset>
		</delete>
	</target>

	<target name="jspm" depends="src.jspm, web.jspm" />

	<target name="src" depends="jspm" description="creates all sources, so the IDE does not complain" />

	<target name="instrument" depends="web.instrument" />

	<target name="compile" depends="src.compile, testsrc.compile, web.compile" />

	<target name="api" depends="src.jspm">
		<delete dir="build/api" />

		<javadoc
				destdir="build/api"
				maxmemory="60m"
				private="on"
				author="off"
				use="off"
				version="off"
				notree="true"
				noindex="true"
				failonerror="true">
			<fileset file="src/com" includes="**/*.java" />
			<arg value="-Xdoclint:all,-missing" />
			<classpath>
				<pathelement location="lib/exedio-cops.jar" />
				<pathelement location="lib/exedio-cope-util.jar" />
				<pathelement location="lib/exedio-cope.jar" />
				<pathelement location="lib/javax.servlet-api.jar" />
				<pathelement location="lib/slf4j-api.jar" />
				<pathelement location="lib/exedio-cope-instrument-annotations.jar" />
			</classpath>
		</javadoc>
	</target>

	<target name="build" depends="compile, test, jar, tomcat" />

	<target name="testprotocol" depends="src.compile">
		<mkdir dir="build" />
		<java classname="com.exedio.cope.console.EnvironmentCop" taskname="testprotocol"
				fork="yes" failonerror="yes">
			<classpath>
				<pathelement location="build/classes/src" />
				<pathelement location="lib/exedio-cope.jar" />
				<pathelement location="lib/trove4j.jar" />
				<pathelement location="lib/exedio-cope-util.jar" />
				<pathelement location="lib/exedio-cops.jar" />
				<pathelement location="lib/javax.servlet-api.jar" />
				<pathelement location="lib/slf4j-api.jar" />
			</classpath>
			<arg value="build/testprotocol.html"/>
			<assertions><enable/></assertions>
		</java>
		<LoadFile srcFile="build/testprotocol.html" property="testprotocol.html" />
		<copy file="testprotocol-template.html"
				tofile="build/testprotocol.html"
				overwrite="true">
			<filterset>
				<filter token="BUILD_TAG" value="${build.tag}" />
				<filter token="TABLE" value="${testprotocol.html}" />
			</filterset>
		</copy>
		<copy file="testprotocol.css" todir="build" />
	</target>

	<target name="all" depends="build, api, testprotocol" />

	<target name="jenkins" depends="all">
		<copy todir="${basedir}/build/success">
			<fileset file="${basedir}/build/exedio-cope-console.jar" />
			<fileset file="${basedir}/exedio-cope-console-log.txt" />
		</copy>
		<copy file="ivy.xml" tofile="build/success/ivy.xml" overwrite="true">
			<filterset>
				<filter token="BUILD_REVISION" value="${build.revision}" />
				<filter token="BUILD_STATUS"   value="${build.status}" />
			</filterset>
		</copy>
	</target>

	<target name="publishlocally" depends="jar">
		<ant dir="ivy" target="publishlocally" />
	</target>

</project>

<%
/*
 * Copyright (C) 2004-2009  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.cope.console;

import static com.exedio.cope.console.Format.format;
import static com.exedio.cope.console.ConnectionPoolCop.FLUSH;

import com.exedio.cope.util.Pool.Info;
import com.exedio.cope.util.PoolCounter;

final class ConnectionPool_Jspm
{
	@SuppressWarnings("StaticMethodOnlyUsedInOneClass") // ok for jspm
	static void writeBody(
			final Out out,
			final ConnectionPoolCop cop,
			final Info info)
	{
		final PoolCounter poolCounter = info.getCounter();
		final String[] names = {
			"Loss = Destroy/Get /%",
			"Idle",
			"Idle Maximum",
			"Create",
			"Destroy",
			"Idle Limit",
		};
		final String[] shortNames = {
			"%",
			"id",
			"ix",
			"cr",
			"dy",
		};
		%>
		<table style="float:left;">
			<caption>Statistics</caption>
			<tr>
				<th rowspan="3">Idle</th>
				<th>Limit</th>
				<td><%=format(info.getIdleLimit())%></td>
			</tr>
			<tr>
				<th>Initial</th>
				<td><%=format(info.getIdleInitial())%></td>
			</tr>
			<tr>
				<th>Level</th>
				<td><%=format(info.getIdleLevel())%></td>
			</tr>
			<tr>
				<th colspan="2">Get</th>
				<td><%=format(poolCounter.getGetCounter())%></td>
			</tr>
			<tr>
				<th colspan="2">Put</th>
				<td><%=format(poolCounter.getPutCounter())%></td>
			</tr>
			<tr>
				<th colspan="2">Get - Put</th>
				<td><%=format(poolCounter.getGetCounter() - poolCounter.getPutCounter())%></td>
			</tr>
			<tr>
				<th rowspan="2">Invalid On</th>
				<th>Get</th>
				<td><%=format(info.getInvalidOnGet())%></td>
			</tr>
			<tr>
				<th>Put</th>
				<td><%=format(info.getInvalidOnPut())%></td>
			</tr>
		</table>
		<form action="<%=cop%>" method="POST">
			<input type="submit" name="<%=FLUSH%>" value="flush"
					onclick="return confirm('This operation will flush the global connection pool.\nDo you really want to do this?')" />
		</form>
		<hr>
		<table id="coloredTable">
			<caption>Hypothetical</caption><%
			ColoredTable_Jspm.writeHeader(out, names, shortNames);
			for(final PoolCounter.Pool pool : poolCounter.getPools())
			{
				final boolean inconsistent = !pool.isConsistent();

				final String[] data = {
						format(pool.getLoss()),
						format(pool.getIdleCount()),
						format(pool.getIdleCountMax()),
						format(pool.getCreateCounter()),
						format(pool.getDestroyCounter()),
					};
			%>
			<tr<%if(inconsistent){%> class="inconsistent"<%}%>><%
				ColoredTable_Jspm.writeData(out, data);
				%>
				<td><%if(inconsistent){%>inconsistent <%}%><%=pool.getIdleLimit()%></td>
			</tr><%
			}
		%>
		</table><%
	}

	private ConnectionPool_Jspm()
	{
		// prevent instantiation
	}
}%>

<%
/*
 * Copyright (C) 2004-2009  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.cope.console;

import static com.exedio.cope.console.Format.format;
import static com.exedio.cope.console.Format.formatAndHide;

import java.util.List;
import java.util.Locale;

import com.exedio.cope.ThreadController;

final class Thread_Jspm
{
	final static void writeHead(final Out out)
	{
	%>
		<style>
			span.expand
			{
				font-size:80%;
			}
		</style>
		<script>
			function toggleStacktrace(image,more)
			{
				var imageSrc = image.src;
				var moreElement = document.getElementById(more);
				if(imageSrc.substring(imageSrc.length-8)=="true.png")
				{
					image.src = imageSrc.substring(0, imageSrc.length-8) + "false.png";
					moreElement.style.display = "none";
				}
				else
				{
					image.src = imageSrc.substring(0, imageSrc.length-9) + "true.png";
					moreElement.style.display = "inline";
				}
			}
		</script><%
	}
	
	final static void writeBody(
			final Out out,
			final List<ThreadController> threads)
	{
		%>
		<table>
			<caption>Thread Controllers</caption>
			<tr>
				<th>Name</th>
				<th>Daemon</th>
				<th>Priority</th>
				<th>Id</th>
				<th>Alive</th>
				<th>State</th>
				<th>Stacktrace</th>
				<th>Start</th>
			</tr><%
			
			int n = 0;
			for(final ThreadController thread : threads)
			{
			%>
			<tr>
				<td class="text"><%=thread.getName()%></td>
				<td class="text"><% if(thread.isDaemon()){%>X<%} %></td>
				<td><%=formatAndHide(Integer.MIN_VALUE, thread.getPriority())%></td>
				<td><%=format(thread.getId())%></td>
				<td class="text"><% if(thread.isAlive()){%>X<%} %></td>
				<td class="text"><%=thread.getState().name().toLowerCase(Locale.ENGLISH)%></td>
				<td class="text"><%
					final StackTraceElement[] sts = thread.getStackTrace();
					if(sts!=null && sts.length>0)
					{
					%>
					<img class="node" onClick="toggleStacktrace(this,'more<%=n%>')" src="<%=ConsoleServlet.nodeFalse%>">
					<%=sts[0].toString()%>
					<span id="more<%=n%>" class="expand"><%
						
						for(int i = 1; i<sts.length; i++)
						{
							final StackTraceElement st = sts[i];
						%>
						<br><%=st.toString()%><%
						}
						n++;
						%>
					</span>
				<%
					}
				%></td>
				<td class="text">
					<form method="POST">
						<input type="hidden" name="<%=ThreadCop.ID%>" value="<%=thread.getId()%>" />
						<input type="submit" name="<%=ThreadCop.RESTART%>" value="Now" />
					</form>
				</td>
			</tr><%
			}
			%>
		</table><%
	}
}%>